/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/": {
    /**
     * Returns a message if the API is up and running.
     * @description Returns a message if the API is up and running.
     */
    get: {
      /**
       * Returns a message if the API is up and running.
       * @description Returns a message if the API is up and running.
       */
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["Message"];
          };
        };
      };
    };
  };
  "/api/config": {
    /**
     * Returns the configuration of the Home Assistant instance.
     * @description Returns the configuration of the Home Assistant instance.
     */
    get: {
      /**
       * Returns the configuration of the Home Assistant instance.
       * @description Returns the configuration of the Home Assistant instance.
       */
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["Config"];
          };
        };
      };
    };
  };
  "/api/events": {
    /**
     * Returns an array of event objects. Each event object contains event name and listener count.
     * @description Returns an array of event objects. Each event object contains event name and listener count.
     */
    get: {
      /**
       * Returns an array of event objects. Each event object contains event name and listener count.
       * @description Returns an array of event objects. Each event object contains event name and listener count.
       */
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["Events"];
          };
        };
      };
    };
  };
  "/api/services": {
    /**
     * Returns an array of service objects. Each service object contains domain, service name, and description.
     * @description Returns an array of service objects. Each service object contains domain, service name, and description.
     */
    get: {
      /**
       * Returns an array of service objects. Each service object contains domain, service name, and description.
       * @description Returns an array of service objects. Each service object contains domain, service name, and description.
       */
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["Services"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Message: {
      /** @description The message returned by the API. */
      message?: string;
    };
    Config: {
      /** @description The components that are enabled in the Home Assistant instance. */
      components?: string[];
      /** @description The directory where the Home Assistant configuration is stored. */
      config_dir?: string;
      /** @description The elevation of the Home Assistant instance. */
      elevation?: number;
      /** @description The latitude of the Home Assistant instance. */
      latitude?: number;
      /** @description The location name of the Home Assistant instance. */
      location_name?: string;
      /** @description The longitude of the Home Assistant instance. */
      longitude?: number;
      /** @description The time zone of the Home Assistant instance. */
      time_zone?: string;
      /** @description The unit system of the Home Assistant instance. */
      unit_system?: {
        /** @description The length unit of the Home Assistant instance. */
        length?: string;
        /** @description The mass unit of the Home Assistant instance. */
        mass?: string;
        /** @description The pressure unit of the Home Assistant instance. */
        pressure?: string;
        /** @description The temperature unit of the Home Assistant instance. */
        temperature?: string;
        /** @description The volume unit of the Home Assistant instance. */
        volume?: string;
      };
      /** @description The version of the Home Assistant instance. */
      version?: string;
      /** @description The external directories that are whitelisted in the Home Assistant instance. */
      whitelist_external_dirs?: string[];
    };
    /** @description An array of event objects. Each event object contains event name and listener count. */
    Events: components["schemas"]["Event"][];
    Event: {
      /** @description The type of the event. */
      event?: string;
      /** @description The data of the event. */
      listener_count?: Record<string, never>;
    };
    /** @description An array of service objects. Each service object contains domain, service name, and description. */
    Services: components["schemas"]["Service"][];
    Service: {
      /** @description The domain of the service. */
      domain?: string;
      /** @description The names of the services. */
      services?: unknown[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
